measured-component = {
  id-label => component-id
  measurement
  ? signers-label => [ + signer-id-type ]
  ? flags-label => flags-type
}

measurement //= ( digested-measurement-label => corim.digest )
measurement //= ( raw-measurement-label => bytes )

component-id = [
  name:      text
  ? version: version
]

;# import coswid.$version-scheme from rfc9393 as coswid

version = [
  val:      text
  ? scheme: coswid.$version-scheme
]

corim.digest = [
  alg: (int / text)
  val: digest-value-type
]

signer-id-type = eat.JC<bytes-b64u, bytes>
flags-type = eat.JC<bytes8-b64u, bytes8>
digest-value-type = eat.JC<bytes-b64u, bytes>

bytes-b64u = text .b64u bytes
bytes8 = bytes .size 8
bytes8-b64u = text .b64u bytes8

id-label = eat.JC<"id", 1>
digested-measurement-label = eat.JC<"digested-measurement", 2>
raw-measurement-label = eat.JC<"raw-measurement", 5>
signers-label = eat.JC<"signers", 3>
flags-label = eat.JC<"flags", 4>

; TODO import from rfc9711

eat.JSON-ONLY<J> = J .feature "json"
eat.CBOR-ONLY<C> = C .feature "cbor"
eat.JC<J,C> = eat.JSON-ONLY<J> / eat.CBOR-ONLY<C>
